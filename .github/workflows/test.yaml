# This is a GitHub Action workflow to test code and style
## Only for Pull Requests and Push to main branch

name: test

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]
  # Triggers the workflow on push to main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install Node.JS
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Using latest LTS

      # Install Dependencies
      - name: Install Dependencies
        run: npm ci
        env:
          CI: true 
      
      # Copy required files
      - name: Copy Config Files
        run : |
          Copy-Item -Path ".\src\ServerConfigExample.ts" -Destination ".\src\ServerConfig.ts"
      
      # Lint
      - name: Lint / Code Style Checks
        run: npm run lint
        env:
          CI: true

      # Enable Cosmos DB Emulator
      - name: Enable Cosmos DB Emulator and Run Test
        run: |
          Write-Host "Downgrade Cosmos DB Emulator"
          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
          Uninstall-CosmosDbEmulator
          choco install azure-cosmosdb-emulator --version=2.14.9

          Write-Host "Start Cosmos DB Emulator"
          Start-CosmosDbEmulator -NoFirewall -NoUI

          # Pipe an emulator info object to the output stream

          $Emulator = Get-Item "$env:ProgramFiles\Azure Cosmos DB Emulator\Microsoft.Azure.Cosmos.Emulator.exe"
          $IPAddress = Get-NetIPAddress -AddressFamily IPV4 -AddressState Preferred -PrefixOrigin Manual | Select-Object IPAddress
          
          New-Object PSObject @{
            Emulator = $Emulator.BaseName
            Version = $Emulator.VersionInfo.ProductVersion
            Endpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8081/" }
            MongoDBEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "mongodb://${_}:10255/" }
            CassandraEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "tcp://${_}:10[35](https://github.com/hyecheol123/Collegemate-Miscellaneous-API/actions/runs/5095855854/jobs/9161237090#step:3:35)0/" }
            GremlinEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "http://${_}:8901/" }
            TableEndpoint = @($(hostname), $IPAddress.IPAddress) | ForEach-Object { "https://${_}:8902/" }
            IPAddress = $IPAddress.IPAddress
          }

          $HostAddress = "https://$(@($IPAddress.IPAddress)):8081"
          Write-Host "Connect to ${HostAddress}"

          echo "COSMOS_EMULATOR_ENDPOINT=${HostAddress}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      # Run Tests
      - name: Test
        run: npm test
        env:
          CI: true